import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.98be4c9c.js";const u=JSON.parse('{"title":"Rust 初阶（二）","description":"","frontmatter":{},"headers":[],"relativePath":"feNote/Rust/Rust 初阶（二）.md","filePath":"feNote/Rust/Rust 初阶（二）.md","lastUpdated":1702475205000}'),p={name:"feNote/Rust/Rust 初阶（二）.md"},o=l(`<h1 id="rust-初阶-二" tabindex="-1">Rust 初阶（二） <a class="header-anchor" href="#rust-初阶-二" aria-label="Permalink to &quot;Rust 初阶（二）&quot;">​</a></h1><h2 id="使用包、crate-和模块管理不断增长的项目" tabindex="-1">使用包、Crate 和模块管理不断增长的项目 <a class="header-anchor" href="#使用包、crate-和模块管理不断增长的项目" aria-label="Permalink to &quot;使用包、Crate 和模块管理不断增长的项目&quot;">​</a></h2><p>模块系统包括：</p><ul><li><strong>包</strong>（<em>Packages</em>）：Cargo 的一个功能，它允许你构建、测试和分享 crate。</li><li><strong>Crates</strong> ：一个模块的树形结构，它形成了库或二进制项目。</li><li><strong>模块</strong>（<em>Modules</em>）和 <strong>use</strong>：允许你控制作用域和路径的私有性。</li><li><strong>路径</strong>（<em>path</em>）：一个命名例如结构体、函数或模块等项的方式</li></ul><h3 id="包和-crate" tabindex="-1">包和 Crate <a class="header-anchor" href="#包和-crate" aria-label="Permalink to &quot;包和 Crate&quot;">​</a></h3><p>crate 有两种形式：二进制项和库。<em>二进制项</em> 可以被编译为可执行程序，比如一个命令行程序或者一个服务器。它们必须有一个 <code>main</code> 函数来定义当程序被执行的时候所需要做的事情。</p><p>二进制项的入口是 <code>src/main.rs</code>，库的入口是<code>src/lib.rs</code>。库没有 main 函数，也不会被编译成可执行程序。大多数时候 Rustaceans 说的 crate 都是指库。</p><p><em>包</em>（<em>package</em>）是提供一系列功能的一个或者多个 crate。一个包会包含一个 <em>Cargo.toml</em> 文件，阐述如何去构建这些 crate。包中可以包含至多一个库 crate(library crate)。包中可以包含任意多个二进制 crate(binary crate)，但是必须至少包含一个 crate（无论是库的还是二进制的）。</p><p>一个包可以拥有多个二进制 crate：每个 <em>src/bin</em> 下的文件都会被编译成一个独立的二进制 crate。</p><p><strong>公共库的公有API 考量</strong> =&gt; <a href="https://rust-lang.github.io/api-guidelines/" target="_blank" rel="noreferrer">The Rust API Guidelines</a></p><h4 id="创建模块" tabindex="-1">创建模块 <a class="header-anchor" href="#创建模块" aria-label="Permalink to &quot;创建模块&quot;">​</a></h4><p>模块的寻找逻辑：</p><ul><li><strong>crate 根节点</strong>开始：src/lib.rs 或者 src/main.rs</li><li><strong>声明模块</strong>：用<code>mod garden</code>声明了一个叫做<code>garden</code>的模块。编译器会在下列路径中寻找模块代码： <ul><li>内联，在大括号中，当<code>mod garden</code>后方不是一个分号而是一个大括号</li><li>在文件 <em>src/garden.rs</em></li><li>在文件 <em>src/garden/mod.rs</em>（淘汰）</li></ul></li><li><strong>声明子模块</strong>：在 <code>src/garden.rs</code> 中定义了<code>mod vegetables;</code>，编译器会在以父模块命名的目录中寻找子模块代码： <ul><li>内联，在大括号中，当<code>mod vegetables</code>后方不是一个分号而是一个大括号</li><li>在文件 <em>src/garden/vegetables.rs</em></li><li>在文件 <em>src/garden/vegetables/mod.rs</em>（淘汰）</li></ul></li></ul><p>执行 <code>cargo new --lib restaurant</code> 创建一个名为 <code>restaurant</code> 的库。</p><p>使用 mod 声明一个 模块：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// src/lib.rs</span></span>
<span class="line"><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">front_of_house</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hosting</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">seat_at_table</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">serving</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">take_order</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">serve_order</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">take_payment</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// src/lib.rs</span></span>
<span class="line"><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">front_of_house</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hosting</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">seat_at_table</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">serving</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">take_order</span><span style="color:#24292E;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">serve_order</span><span style="color:#24292E;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">take_payment</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="路径" tabindex="-1">路径 <a class="header-anchor" href="#路径" aria-label="Permalink to &quot;路径&quot;">​</a></h3><h4 id="绝对路径与相对路径" tabindex="-1">绝对路径与相对路径 <a class="header-anchor" href="#绝对路径与相对路径" aria-label="Permalink to &quot;绝对路径与相对路径&quot;">​</a></h4><p>首先需要将模块置为 公有，才能进行引入，否则编译报错。</p><p>引入路径 可以是 create 开始的绝对路径，也可以是当前作用域开始的相对路径，也可以使用 super 引入父模块的路径：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">front_of_house</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hosting</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eat_at_restaurant</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#6A737D;">    // 绝对路径</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">crate::</span><span style="color:#B392F0;">front_of_house</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">hosting</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    // 相对路径</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">front_of_house</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">hosting</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">new_mod</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">_drink</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#6A737D;">            // super 相对路径</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">super</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">front_of_house</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">hosting</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">front_of_house</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hosting</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eat_at_restaurant</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#6A737D;">    // 绝对路径</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">crate::</span><span style="color:#6F42C1;">front_of_house</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">hosting</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    // 相对路径</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">front_of_house</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">hosting</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">new_mod</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">_drink</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#6A737D;">            // super 相对路径</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">super</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">front_of_house</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">hosting</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="创建公有的结构体和枚举" tabindex="-1">创建公有的结构体和枚举 <a class="header-anchor" href="#创建公有的结构体和枚举" aria-label="Permalink to &quot;创建公有的结构体和枚举&quot;">​</a></h4><p>如果我们在一个结构体定义的前面使用了 <code>pub</code> ，这个结构体会变成公有的，但是这个结构体的字段仍然是私有的。</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">back_of_house</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">struct</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Breakfast</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> toast</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        seasonal_fruit</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">impl</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Breakfast</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">summer</span><span style="color:#E1E4E8;">(toast</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#B392F0;">str</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Breakfast</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">Breakfast</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                toast</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">(toast),</span></span>
<span class="line"><span style="color:#E1E4E8;">                seasonal_fruit</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;peaches&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eat_at_restaurant</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#6A737D;">    // 在夏天订购一个黑麦土司作为早餐</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">mut</span><span style="color:#E1E4E8;"> meal </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">back_of_house</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Breakfast</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">summer</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Rye&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">    // 改变主意更换想要面包的类型</span></span>
<span class="line"><span style="color:#E1E4E8;">    meal</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">toast </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Wheat&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">println!</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;I&#39;d like {} toast please&quot;</span><span style="color:#E1E4E8;">, meal</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">toast);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    // 如果取消下一行的注释代码不能编译；</span></span>
<span class="line"><span style="color:#6A737D;">    // 不允许查看或修改早餐附带的季节水果</span></span>
<span class="line"><span style="color:#6A737D;">    // meal.seasonal_fruit = String::from(&quot;blueberries&quot;);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">back_of_house</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Breakfast</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> toast</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        seasonal_fruit</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">impl</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Breakfast</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">summer</span><span style="color:#24292E;">(toast</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#6F42C1;">str</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Breakfast</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">Breakfast</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                toast</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(toast),</span></span>
<span class="line"><span style="color:#24292E;">                seasonal_fruit</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;peaches&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eat_at_restaurant</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#6A737D;">    // 在夏天订购一个黑麦土司作为早餐</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">mut</span><span style="color:#24292E;"> meal </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">back_of_house</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Breakfast</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">summer</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Rye&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">    // 改变主意更换想要面包的类型</span></span>
<span class="line"><span style="color:#24292E;">    meal</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">toast </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Wheat&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">println!</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;I&#39;d like {} toast please&quot;</span><span style="color:#24292E;">, meal</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">toast);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    // 如果取消下一行的注释代码不能编译；</span></span>
<span class="line"><span style="color:#6A737D;">    // 不允许查看或修改早餐附带的季节水果</span></span>
<span class="line"><span style="color:#6A737D;">    // meal.seasonal_fruit = String::from(&quot;blueberries&quot;);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>因为 <code>back_of_house::Breakfast</code> 具有私有字段，所以这个结构体需要提供一个公共的关联函数来构造 <code>Breakfast</code> 的实例 (这里我们命名为 <code>summer</code>)。如果 <code>Breakfast</code> 没有这样的函数，我们将无法在 <code>eat_at_restaurant</code> 中创建 <code>Breakfast</code> 实例，因为我们不能在 <code>eat_at_restaurant</code> 中设置私有字段 <code>seasonal_fruit</code> 的值。</p><p>与之相反的是，如果我们将枚举设为公有，则它的所有成员都将变为公有。</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">back_of_house</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">enum</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Appetizer</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">Soup</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">Salad</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eat_at_restaurant</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> order1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">back_of_house</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Appetizer</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Soup</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> order2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">back_of_house</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Appetizer</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Salad</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">back_of_house</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">enum</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Appetizer</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">Soup</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">Salad</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eat_at_restaurant</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> order1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">back_of_house</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Appetizer</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Soup</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> order2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">back_of_house</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Appetizer</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Salad</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="使用-use-关键字" tabindex="-1">使用 use 关键字 <a class="header-anchor" href="#使用-use-关键字" aria-label="Permalink to &quot;使用 use 关键字&quot;">​</a></h3><p>可以使用 <code>use</code> 关键字创建一个短路径，然后就可以在作用域中的任何地方使用这个更短的名字。</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">front_of_house</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hosting</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">crate::</span><span style="color:#B392F0;">front_of_house</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">hosting;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eat_at_restaurant</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">hosting</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">front_of_house</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hosting</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">crate::</span><span style="color:#6F42C1;">front_of_house</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">hosting;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eat_at_restaurant</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">hosting</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>在作用域中增加 <code>use</code> 和路径类似于在文件系统中创建软连接（符号连接，symbolic link）。通过在 crate 根增加 <code>use crate::front_of_house::hosting</code>，现在 <code>hosting</code> 在作用域中就是有效的名称了，如同 <code>hosting</code> 模块被定义于 crate 根一样。通过 <code>use</code> 引入作用域的路径也会检查私有性，同其它路径一样。</p><p><code>use</code> 只能创建 <code>use</code> 所在的特定作用域内的短路径，下列这种情况，eat_at_restaurant 移动到了一个新的模块，不同于 use 的作用域，所以不能编译：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">front_of_house</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hosting</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">crate::</span><span style="color:#B392F0;">front_of_house</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">hosting;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">customer</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eat_at_restaurant</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">hosting</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">();</span><span style="color:#6A737D;"> // 无法编译</span></span>
<span class="line"><span style="color:#6A737D;">        // super::hosting::add_to_waitlist(); </span></span>
<span class="line"><span style="color:#6A737D;">       	// 或者在模块内使用 use create::front_of_house::hosting</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">front_of_house</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hosting</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">crate::</span><span style="color:#6F42C1;">front_of_house</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">hosting;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">customer</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eat_at_restaurant</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">hosting</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">();</span><span style="color:#6A737D;"> // 无法编译</span></span>
<span class="line"><span style="color:#6A737D;">        // super::hosting::add_to_waitlist(); </span></span>
<span class="line"><span style="color:#6A737D;">       	// 或者在模块内使用 use create::front_of_house::hosting</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>我们必须在调用函数时指定父模块，这样可以清晰地表明函数不是在本地定义的，同时使完整路径的重复度最小化。</p><p>另一方面，使用 <code>use</code> 引入结构体、枚举和其他项时，习惯是指定它们的完整路径。</p><p>在同名的时候，需要将父模块也引入进来。</p><h4 id="使用-as-重命名" tabindex="-1">使用 as 重命名 <a class="header-anchor" href="#使用-as-重命名" aria-label="Permalink to &quot;使用 as 重命名&quot;">​</a></h4><p>使用 as 重命名可以解决两个库有同名结构体的问题：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">fmt</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Result</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">io</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IoResult</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">function1</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Result</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    // --snip--</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">function2</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IoResult</span><span style="color:#E1E4E8;">&lt;()&gt; {</span></span>
<span class="line"><span style="color:#6A737D;">    // --snip--</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">fmt</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Result</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">io</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IoResult</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">function1</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Result</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    // --snip--</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">function2</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IoResult</span><span style="color:#24292E;">&lt;()&gt; {</span></span>
<span class="line"><span style="color:#6A737D;">    // --snip--</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="使用-pub-use-重导出" tabindex="-1">使用 pub use 重导出 <a class="header-anchor" href="#使用-pub-use-重导出" aria-label="Permalink to &quot;使用 pub use 重导出&quot;">​</a></h4><p>将一个模块引入到当前作用域后，可以使用 pub use 将其当成当前模块的内容进行重导出：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">front_of_house</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hosting</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">crate::</span><span style="color:#B392F0;">front_of_house</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">hosting;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eat_at_restaurant</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">hosting</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 现在可以直接 restaurant::hosting::add_to_waitlist 调用了。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">front_of_house</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hosting</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">crate::</span><span style="color:#6F42C1;">front_of_house</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">hosting;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eat_at_restaurant</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">hosting</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 现在可以直接 restaurant::hosting::add_to_waitlist 调用了。</span></span></code></pre></div><h4 id="使用外部包" tabindex="-1">使用外部包 <a class="header-anchor" href="#使用外部包" aria-label="Permalink to &quot;使用外部包&quot;">​</a></h4><p>在 <em>Cargo.toml</em> 中加入 <code>rand</code> 依赖告诉了 Cargo 要从 <a href="https://crates.io/" target="_blank" rel="noreferrer">crates.io</a> 下载 <code>rand</code> 和其依赖，并使其可在项目代码中使用。</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rand</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Rng</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> secret_number </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rand</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">thread_rng</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">.</span><span style="color:#B392F0;">gen_range</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">..=</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rand</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Rng</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> secret_number </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rand</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">thread_rng</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">.</span><span style="color:#6F42C1;">gen_range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">..=</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>std 标准库也是外部 crate，随 Rust 语言一同分发。</p><h4 id="嵌套路径语法" tabindex="-1">嵌套路径语法 <a class="header-anchor" href="#嵌套路径语法" aria-label="Permalink to &quot;嵌套路径语法&quot;">​</a></h4><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">cmp</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Ordering</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">io;</span></span>
<span class="line"><span style="color:#6A737D;">// 可以写成</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">{</span><span style="color:#B392F0;">cmp</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Ordering</span><span style="color:#E1E4E8;">, io};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">io;</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">io</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Write</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 可以写成</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">io</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">{</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">Write</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">cmp</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Ordering</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">io;</span></span>
<span class="line"><span style="color:#6A737D;">// 可以写成</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">{</span><span style="color:#6F42C1;">cmp</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Ordering</span><span style="color:#24292E;">, io};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">io;</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">io</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Write</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 可以写成</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">io</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">Write</span><span style="color:#24292E;">};</span></span></code></pre></div><h4 id="通过-glob-运算符将所有公有定义引入作用域" tabindex="-1">通过 glob 运算符将所有公有定义引入作用域 <a class="header-anchor" href="#通过-glob-运算符将所有公有定义引入作用域" aria-label="Permalink to &quot;通过 glob 运算符将所有公有定义引入作用域&quot;">​</a></h4><p>将一个路径下 <strong>所有</strong> 公有项引入作用域，可以指定路径后跟 <code>*</code>，glob 运算符：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">collections</span><span style="color:#F97583;">::*</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">collections</span><span style="color:#D73A49;">::*</span><span style="color:#24292E;">;</span></span></code></pre></div><p>glob 会使得我们难以推导作用域中有什么名称和它们是在何处定义的。</p><p>glob 运算符经常用于测试模块 <code>tests</code> 中，这时会将所有内容引入作用域；glob 运算符有时也用于 prelude 模式；查看 <a href="https://doc.rust-lang.org/std/prelude/index.html#other-preludes" target="_blank" rel="noreferrer">标准库中的文档</a> 了解这个模式的更多细节。</p><h4 id="最终示例" tabindex="-1">最终示例 <a class="header-anchor" href="#最终示例" aria-label="Permalink to &quot;最终示例&quot;">​</a></h4><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">front_of_house</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    // 在模块内，还可以定义其他的模块</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hosting</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">seat_at_table</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">serving</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">take_order</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">serve_order</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">take_payment</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">crate::</span><span style="color:#B392F0;">front_of_house</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">hosting;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eat_at_restaurant</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#6A737D;">    // 绝对路径</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">crate::</span><span style="color:#B392F0;">front_of_house</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">hosting</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    // 相对路径, 与 front_of_house 同级，所以可以调用。</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">front_of_house</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">hosting</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    // 使用 use 进行路径优化</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">hosting</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    // 在夏天订购一个黑麦吐司作为早餐</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">mut</span><span style="color:#E1E4E8;"> meal </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">back_of_house</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Breakfast</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">summer</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Rye&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">    // 改变主意更换想要的面包类型</span></span>
<span class="line"><span style="color:#E1E4E8;">    meal</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">toast </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Wheat&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">println!</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;I&#39;d like {} toast please&quot;</span><span style="color:#E1E4E8;">, meal</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">toast);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    // 如果取消下一行的注释代码不能编译；</span></span>
<span class="line"><span style="color:#6A737D;">    // 不允许查看或修改早餐附带的季节水果</span></span>
<span class="line"><span style="color:#6A737D;">    // meal.seasonal_fruit = String::from(&quot;blueberries&quot;);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> order1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">back_of_house</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Appetizer</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Soup</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> order2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">back_of_house</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Appetizer</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Salad</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">deliver_order</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">back_of_house</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">struct</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Breakfast</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> toast</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        seasonal_fruit</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#6A737D;">  // 私有属性不允许访问及修改</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">impl</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Breakfast</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">summer</span><span style="color:#E1E4E8;">(toast</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#B392F0;">str</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Breakfast</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">Breakfast</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                toast</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">(toast),</span></span>
<span class="line"><span style="color:#E1E4E8;">                seasonal_fruit</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;peaches&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">enum</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Appetizer</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">Soup</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">Salad</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fix_incorrect_order</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">cook_order</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">super</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">deliver_order</span><span style="color:#E1E4E8;">();</span><span style="color:#6A737D;"> // 从父模块开始的相对路径</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cook_order</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">customer</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">crate::</span><span style="color:#B392F0;">front_of_house</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">hosting;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eat_at_restaurant</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">hosting</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">front_of_house</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    // 在模块内，还可以定义其他的模块</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hosting</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">seat_at_table</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">serving</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">take_order</span><span style="color:#24292E;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">serve_order</span><span style="color:#24292E;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">take_payment</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">crate::</span><span style="color:#6F42C1;">front_of_house</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">hosting;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eat_at_restaurant</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#6A737D;">    // 绝对路径</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">crate::</span><span style="color:#6F42C1;">front_of_house</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">hosting</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    // 相对路径, 与 front_of_house 同级，所以可以调用。</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">front_of_house</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">hosting</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    // 使用 use 进行路径优化</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">hosting</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    // 在夏天订购一个黑麦吐司作为早餐</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">mut</span><span style="color:#24292E;"> meal </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">back_of_house</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Breakfast</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">summer</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Rye&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">    // 改变主意更换想要的面包类型</span></span>
<span class="line"><span style="color:#24292E;">    meal</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">toast </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Wheat&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">println!</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;I&#39;d like {} toast please&quot;</span><span style="color:#24292E;">, meal</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">toast);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    // 如果取消下一行的注释代码不能编译；</span></span>
<span class="line"><span style="color:#6A737D;">    // 不允许查看或修改早餐附带的季节水果</span></span>
<span class="line"><span style="color:#6A737D;">    // meal.seasonal_fruit = String::from(&quot;blueberries&quot;);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> order1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">back_of_house</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Appetizer</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Soup</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> order2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">back_of_house</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Appetizer</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Salad</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">deliver_order</span><span style="color:#24292E;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">back_of_house</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Breakfast</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> toast</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        seasonal_fruit</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">,</span><span style="color:#6A737D;">  // 私有属性不允许访问及修改</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">impl</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Breakfast</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">summer</span><span style="color:#24292E;">(toast</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#6F42C1;">str</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Breakfast</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">Breakfast</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                toast</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(toast),</span></span>
<span class="line"><span style="color:#24292E;">                seasonal_fruit</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;peaches&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">enum</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Appetizer</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">Soup</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">Salad</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fix_incorrect_order</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">cook_order</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">super</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">deliver_order</span><span style="color:#24292E;">();</span><span style="color:#6A737D;"> // 从父模块开始的相对路径</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cook_order</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">customer</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">crate::</span><span style="color:#6F42C1;">front_of_house</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">hosting;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eat_at_restaurant</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">hosting</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="将模块拆分成多个文件" tabindex="-1">将模块拆分成多个文件 <a class="header-anchor" href="#将模块拆分成多个文件" aria-label="Permalink to &quot;将模块拆分成多个文件&quot;">​</a></h3><p><code>mod</code> 关键字声明模块，而 Rust 会在与模块同名的文件中查找模块的代码。</p><p>在 src 下的文件就是 crate 下的模块，需要使用 mod 关键字声明。举例如下：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// src/lib.rs</span></span>
<span class="line"><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">front_of_house</span><span style="color:#E1E4E8;">;</span><span style="color:#6A737D;"> // 声明模块</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">crate::</span><span style="color:#B392F0;">front_of_house</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">hosting;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eat_at_restaurant</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">hosting</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// src/front_of_house.rs</span></span>
<span class="line"><span style="color:#F97583;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hosting</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// src/front_of_house/hosting.rs</span></span>
<span class="line"><span style="color:#F97583;">pub</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">add_to_waitlist</span><span style="color:#E1E4E8;">() {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// src/lib.rs</span></span>
<span class="line"><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">front_of_house</span><span style="color:#24292E;">;</span><span style="color:#6A737D;"> // 声明模块</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">crate::</span><span style="color:#6F42C1;">front_of_house</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">hosting;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eat_at_restaurant</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">hosting</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// src/front_of_house.rs</span></span>
<span class="line"><span style="color:#D73A49;">mod</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hosting</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// src/front_of_house/hosting.rs</span></span>
<span class="line"><span style="color:#D73A49;">pub</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">add_to_waitlist</span><span style="color:#24292E;">() {}</span></span></code></pre></div>`,59),e=[o];function t(c,r,y,E,i,F){return n(),a("div",null,e)}const _=s(p,[["render",t]]);export{u as __pageData,_ as default};
