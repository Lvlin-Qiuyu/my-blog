import{_ as s,o as a,c as l,Q as n}from"./chunks/framework.98be4c9c.js";const F=JSON.parse('{"title":"JavaScript Math 对象","description":"","frontmatter":{},"headers":[],"relativePath":"feNote/JavaScript/Math对象.md","filePath":"feNote/JavaScript/Math对象.md","lastUpdated":1702473337000}'),t={name:"feNote/JavaScript/Math对象.md"},p=n(`<h1 id="javascript-math-对象" tabindex="-1">JavaScript Math 对象 <a class="header-anchor" href="#javascript-math-对象" aria-label="Permalink to &quot;JavaScript Math 对象&quot;">​</a></h1><p>JavaScript 默认提供的 Math 对象提供一些辅助数学运算的属性和方法。无需声明，直接调用即可。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 2</span></span></code></pre></div><p>使用 Math 对象已有的运算方法，要比自行编写代码实现要高效，这是因为该对象的计算方法基于 JavaScript 引擎做了更底层的优化。</p><h3 id="math-对象属性" tabindex="-1">Math 对象属性 <a class="header-anchor" href="#math-对象属性" aria-label="Permalink to &quot;Math 对象属性&quot;">​</a></h3><p>Math 对象属性主要是一些数学运算中的特殊值，比如 π 。</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>Math.E</td><td>自然对数的基数 e 的值</td></tr><tr><td>Math.LN10</td><td>$ \\ln 10 $，10 为底的自然对数</td></tr><tr><td>Math.LN2</td><td>$ \\ln 2 $，2 为底的自然对数</td></tr><tr><td>Math.LOG2E</td><td>$ \\log_2e $，以 2 为底 e 的对数</td></tr><tr><td>Math.LOG10E</td><td>$ \\lg e $，以 10 为底 e 的对数</td></tr><tr><td>Math.PI</td><td>π 的值</td></tr><tr><td>Math.SQRT1_2</td><td>$ \\frac{1}{\\sqrt{2}} $，1/2 的平方根</td></tr><tr><td>Math.SQRT2</td><td>$ \\sqrt{2} $，2 的平方根</td></tr><tr><td>Math.DEG_PER_RAD</td><td>chrome 提供，$ \\frac{π}{180} $，值为 0.017453292519943295</td></tr><tr><td>Math.RAD_PER_DEG</td><td>chrome 提供，$ \\frac{180}{π} $，值为 57.29577951308232</td></tr></tbody></table><h3 id="math-对象方法" tabindex="-1">Math 对象方法 <a class="header-anchor" href="#math-对象方法" aria-label="Permalink to &quot;Math 对象方法&quot;">​</a></h3><p>Math 对象提供的一些辅助数学计算的方法。简单介绍一些比较常用的方法。</p><h4 id="max-和-min" tabindex="-1">max 和 min <a class="header-anchor" href="#max-和-min" aria-label="Permalink to &quot;max 和 min&quot;">​</a></h4><p>max 方法和 min 方法用于找到一组数据中的最大值和最小值，可以接受任意多个参数，如下所示：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">54</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 54</span></span>
<span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">min</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">54</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">54</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">32</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">16</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 54</span></span>
<span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">54</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">32</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">16</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 3</span></span></code></pre></div><p>如果传入的参数中有不能转化为数字类型的值，则会返回 NaN。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;abc&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">, {}); </span><span style="color:#6A737D;">// 只要有一个不能转成数字类型，就返回 NaN</span></span>
<span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 0，null 可以转成数字0，如 Number(null) 得到0。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;abc&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">, {}); </span><span style="color:#6A737D;">// 只要有一个不能转成数字类型，就返回 NaN</span></span>
<span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 0，null 可以转成数字0，如 Number(null) 得到0。</span></span></code></pre></div><p>结合扩展运算符，能够方便找到数组中的最大/最小值。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> values </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">values); </span><span style="color:#6A737D;">// 7</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> values </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">values); </span><span style="color:#6A737D;">// 7</span></span></code></pre></div><h4 id="舍入方法" tabindex="-1">舍入方法 <a class="header-anchor" href="#舍入方法" aria-label="Permalink to &quot;舍入方法&quot;">​</a></h4><p>将小数转为整数，Math 提供了 5 个方法供使用：ceil，floor，round，fround，trunc。</p><ul><li>Math.ceil 方法，对小数进行向上舍入。</li><li>Math.floor 方法，对小数进行向下舍入。</li><li>Math.round 方法，执行四舍五入。</li><li>Math.fround 方法，返回数值最接近的单精度（32位）浮点值表示。</li><li>Math.trunc 方法，取整数部分，删去小数部分。</li></ul><p>如下所示：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">ceil</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25.9</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 26</span></span>
<span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">ceil</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25.1</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 26</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">floor</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25.9</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 25</span></span>
<span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">floor</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25.1</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 25</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">round</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25.9</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 26</span></span>
<span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">round</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25.5</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 26</span></span>
<span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">round</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25.4</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 25</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">fround</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0.4</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 0.4000000059604645</span></span>
<span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">fround</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 0.5</span></span>
<span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">fround</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25.9</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 25.899999618530273</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">trunc</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25.9</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 25</span></span>
<span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">trunc</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25.5</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 25</span></span>
<span class="line"><span style="color:#E1E4E8;">Math.</span><span style="color:#B392F0;">trunc</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25.1</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 25</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">ceil</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25.9</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 26</span></span>
<span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">ceil</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25.1</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 26</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">floor</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25.9</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 25</span></span>
<span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">floor</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25.1</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 25</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">round</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25.9</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 26</span></span>
<span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">round</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25.5</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 26</span></span>
<span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">round</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25.4</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 25</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">fround</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0.4</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 0.4000000059604645</span></span>
<span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">fround</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 0.5</span></span>
<span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">fround</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25.9</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 25.899999618530273</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">trunc</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25.9</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 25</span></span>
<span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">trunc</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25.5</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 25</span></span>
<span class="line"><span style="color:#24292E;">Math.</span><span style="color:#6F42C1;">trunc</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25.1</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 25</span></span></code></pre></div><h4 id="随机数" tabindex="-1">随机数 <a class="header-anchor" href="#随机数" aria-label="Permalink to &quot;随机数&quot;">​</a></h4><p>Math.random 方法返回一个 0~1 范围的随机小数，包含 0 不包含 1。</p><p>如果想得到 1~10 范围的随机数，代码如下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> num </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">floor</span><span style="color:#E1E4E8;">(Math.</span><span style="color:#B392F0;">random</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 共 10 个数字，最小值为 1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">floor</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">random</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 共 10 个数字，最小值为 1</span></span></code></pre></div><p>如果想得到 2~10 范围的随机数，代码如下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> num </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">floor</span><span style="color:#E1E4E8;">(Math.</span><span style="color:#B392F0;">random</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 共 9 个数字，最小值为 2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">floor</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">random</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">9</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 共 9 个数字，最小值为 2</span></span></code></pre></div><h4 id="其它方法" tabindex="-1">其它方法 <a class="header-anchor" href="#其它方法" aria-label="Permalink to &quot;其它方法&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">方法</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">Math.abs(x)</td><td style="text-align:left;">返回 x 的绝对值</td></tr><tr><td style="text-align:left;">Math.exp(x)</td><td style="text-align:left;">返回 e 的 x 次幂</td></tr><tr><td style="text-align:left;">Math.expm1(x)</td><td style="text-align:left;">等于 Math.exp(x) - 1</td></tr><tr><td style="text-align:left;">Math.log(x)</td><td style="text-align:left;">返回数的自然对数（底为e）</td></tr><tr><td style="text-align:left;">Math.log1p(x)</td><td style="text-align:left;">等于 1 + Math.log(x)</td></tr><tr><td style="text-align:left;">Math.pow(x,y)</td><td style="text-align:left;">返回 x 的 y 次幂。</td></tr><tr><td style="text-align:left;">Math.hypot(...nums)</td><td style="text-align:left;">返回 nums 中每个数平方和的平方根</td></tr><tr><td style="text-align:left;">Math.clz32(x)</td><td style="text-align:left;">返回 32 位整数 x 的前置 0 的数量</td></tr><tr><td style="text-align:left;">Math.sign(x)</td><td style="text-align:left;">返回表示 x 符号的 1，0，-0 或 -1</td></tr><tr><td style="text-align:left;">Math.sqrt(x)</td><td style="text-align:left;">返回 x 的平方根</td></tr><tr><td style="text-align:left;">Math.cbrt(x)</td><td style="text-align:left;">返回 x 的立方根</td></tr><tr><td style="text-align:left;">Math.acos(x)</td><td style="text-align:left;">返回 x 的反余弦值</td></tr><tr><td style="text-align:left;">Math.acosh(x)</td><td style="text-align:left;">返回 x 的反双曲余弦值</td></tr><tr><td style="text-align:left;">Math.asin(x)</td><td style="text-align:left;">返回 x 的反正弦值</td></tr><tr><td style="text-align:left;">Math.asinh(x)</td><td style="text-align:left;">返回 x 的反双曲正弦值</td></tr><tr><td style="text-align:left;">Math.atan(x)</td><td style="text-align:left;">以介于 -PI/2 与 PI/2 弧度之间的数值来返回 x 的反正切值。</td></tr><tr><td style="text-align:left;">Math.atanh(x)</td><td style="text-align:left;">返回 x 的反双曲正切值。</td></tr><tr><td style="text-align:left;">Math.atan2(y,x)</td><td style="text-align:left;">返回从 x 轴到点 (x,y) 的角度（介于 -PI/2 与 PI/2 弧度之间）。</td></tr><tr><td style="text-align:left;">Math.sin(x)</td><td style="text-align:left;">返回 x 的正弦。</td></tr><tr><td style="text-align:left;">Math.cos(x)</td><td style="text-align:left;">返回 x 的余弦。</td></tr><tr><td style="text-align:left;">Math.tan(x)</td><td style="text-align:left;">返回 x 的正切。</td></tr></tbody></table>`,29),o=[p];function e(r,c,y,E,d,i){return a(),l("div",null,o)}const C=s(t,[["render",e]]);export{F as __pageData,C as default};
